Description: Replace deprecated FFmpeg API
Author: Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>
Last-Update: <2015-11-02>

--- amarok-2.8.0.orig/src/musicbrainz/MusicDNSAudioDecoder.cpp
+++ amarok-2.8.0/src/musicbrainz/MusicDNSAudioDecoder.cpp
@@ -223,7 +223,7 @@ MusicDNSAudioDecoder::decode( const QStr
             {
                 if( !decodedFrame )
                 {
-                    decodedFrame = avcodec_alloc_frame();
+                    decodedFrame = av_frame_alloc();
                     if( !decodedFrame )
                     {
                         warning() << "Unable to allocate enough memory to decode file.";
@@ -231,7 +231,7 @@ MusicDNSAudioDecoder::decode( const QStr
                         break;
                     }
                     else
-                        avcodec_get_frame_defaults( decodedFrame );
+                        av_frame_unref( decodedFrame );
                 }
 
                 decoderRet = avcodec_decode_audio4( pCodecCtx, decodedFrame, &gotFrame, &avpkt );
@@ -267,7 +267,7 @@ MusicDNSAudioDecoder::decode( const QStr
 
     avcodec_close( pCodecCtx );
     avformat_close_input( &pFormatCtx );
-    av_free( decodedFrame );
+    av_frame_free( &decodedFrame );
 
     return data->duration();
 }
@@ -341,7 +341,7 @@ MusicDNSAudioDecoder::decode( const QStr
             {
                 if( !decodedFrame )
                 {
-                    decodedFrame = avcodec_alloc_frame();
+                    decodedFrame = av_frame_alloc();
                     if( !decodedFrame )
                     {
                         warning() << "Unable to allocate enough memory to decode file.";
@@ -349,7 +349,7 @@ MusicDNSAudioDecoder::decode( const QStr
                         break;
                     }
                     else
-                        avcodec_get_frame_defaults( decodedFrame );
+                        av_frame_unref( decodedFrame );
                 }
 
                 decoderRet = avcodec_decode_audio4( pCodecCtx, decodedFrame, &gotFrame, &avpkt );
@@ -385,7 +385,7 @@ MusicDNSAudioDecoder::decode( const QStr
 
     avcodec_close( pCodecCtx );
     avformat_close_input( &pFormatCtx );
-    av_free( decodedFrame );
+    av_frame_free( &decodedFrame );
 
     return data->duration();
 }
@@ -459,7 +459,7 @@ MusicDNSAudioDecoder::decode( const QStr
             {
                 if( !decodedFrame )
                 {
-                    decodedFrame = avcodec_alloc_frame();
+                    decodedFrame = av_frame_alloc();
                     if( !decodedFrame )
                     {
                         warning() << "Unable to allocate enough memory to decode file.";
@@ -467,7 +467,7 @@ MusicDNSAudioDecoder::decode( const QStr
                         break;
                     }
                     else
-                        avcodec_get_frame_defaults( decodedFrame );
+                        av_frame_unref( decodedFrame );
                 }
 
                 decoderRet = avcodec_decode_audio4( pCodecCtx, decodedFrame, &gotFrame, &avpkt );
@@ -503,7 +503,7 @@ MusicDNSAudioDecoder::decode( const QStr
 
     avcodec_close( pCodecCtx );
     av_close_input_file( pFormatCtx );
-    av_free( decodedFrame );
+    av_frame_free( &decodedFrame );
 
     return data->duration();
 }
