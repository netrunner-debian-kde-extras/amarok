From: Modestas Vainius <modestas@vainius.eu>
Subject: [PATCH] Make Amarok use locally installed errsys.msg

This patch makes Amarok MySQLe use locally installed errsys.msg
(by amarok-common package) instead of global MySQL one which
might not be available if mysql-server is not installed.

Signed-off-by: Modestas Vainius <modestas@vainius.eu>

---
 .../mysqlecollection/MySqlEmbeddedCollection.cpp   |   16 +++++++++++++++-
 1 files changed, 15 insertions(+), 1 deletions(-)

diff --git a/src/collection/mysqlecollection/MySqlEmbeddedCollection.cpp b/src/collection/mysqlecollection/MySqlEmbeddedCollection.cpp
index 6453278..df80028 100644
--- a/src/collection/mysqlecollection/MySqlEmbeddedCollection.cpp
+++ b/src/collection/mysqlecollection/MySqlEmbeddedCollection.cpp
@@ -25,10 +25,15 @@
 #include <QThreadStorage>
 #include <QVarLengthArray>
 
+#include <KStandardDirs>
+
 #include <mysql.h>
 
 AMAROK_EXPORT_PLUGIN( MySqlEmbeddedCollectionFactory )
 
+#define MYSQLE_ERRMSG_FILENAME "errmsg.sys"
+#define MYSQLE_ERRMSG_LOCAL_DIR "amarok/mysqle"
+
 void
 MySqlEmbeddedCollectionFactory::init()
 {
@@ -45,9 +50,12 @@ MySqlEmbeddedCollection::MySqlEmbeddedCollection( const QString &id, const QStri
     DEBUG_BLOCK
     const QString defaultsFile = Amarok::config( "MySQLe" ).readEntry( "config", Amarok::saveLocation() + "my.cnf" ); 
     const QString databaseDir = Amarok::config( "MySQLe" ).readEntry( "data", Amarok::saveLocation() + "mysqle" );
+    QString languageDataDir = KGlobal::dirs()->findResourceDir( "data", MYSQLE_ERRMSG_LOCAL_DIR "/" MYSQLE_ERRMSG_FILENAME );
 
     char* defaultsLine = qstrdup( QString( "--defaults-file=%1" ).arg( defaultsFile ).toAscii().data() );
     char* databaseLine = qstrdup( QString( "--datadir=%1" ).arg( databaseDir ).toAscii().data() );
+    char* languageLine = (languageDataDir.isNull()) ? NULL :
+        qstrdup( QString( "--language=%1/%2" ).arg( languageDataDir ).arg( MYSQLE_ERRMSG_LOCAL_DIR ).toAscii().data() );
 
     if( !QFile::exists( defaultsFile ) )
     {
@@ -64,7 +72,9 @@ MySqlEmbeddedCollection::MySqlEmbeddedCollection( const QString &id, const QStri
         dir.mkpath( "." );
     }
 
-    static const int num_elements = 10;
+    int num_elements = 10;
+    if (languageLine)
+        num_elements++;
     char **server_options = new char* [ num_elements + 1 ];
     server_options[0] = const_cast<char*>( "amarokmysqld" );
     server_options[1] = defaultsLine;
@@ -78,6 +88,8 @@ MySqlEmbeddedCollection::MySqlEmbeddedCollection( const QString &id, const QStri
     server_options[7] = const_cast<char*>( "--myisam-recover=FORCE" );
     server_options[8] = const_cast<char*>( "--character-set-server=utf8" );
     server_options[9] = const_cast<char*>( "--collation-server=utf8_bin" );
+    if (languageLine)
+        server_options[num_elements-1] = languageLine;
     server_options[num_elements] = 0;
 
     char **server_groups = new char* [ 3 ];
@@ -97,6 +109,8 @@ MySqlEmbeddedCollection::MySqlEmbeddedCollection( const QString &id, const QStri
     delete [] server_groups;
     delete [] defaultsLine;
     delete [] databaseLine;
+    if (languageLine)
+        delete [] languageLine;
 
     if( !m_db )
     {
-- 
tg: (0b83eb7..) debian/mysqle_amarok_local_errmsg_feature (depends on: upstream)
